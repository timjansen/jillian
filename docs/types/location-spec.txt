////// Location type

// Properties:
locatedIn: [<ref instanceof Location>]   // descriptive location as detailed as possible. can point to a planet, continent, country, city, neighbourhood, street or exact street address.. List, so it can be both a street and a neighbourhood, for example. Or two streets for corner.
geoDirection: 'angleType'    // optional. 0 is north.
geoPosition: 'geoPositionType' // optional. The center of the location.
area: [ // optional. The exact area covered by the location, as a series of shapes
  { 
    shape: [geoPositionType...],  // three or more geoPositions to describe the shape of the location
    minElevation: 'lengthType',   // optional. the minimum elevation of the shape
    maxElevation: 'lengthType'    // optional. the maximum elevation of the shape
  },...
],
closeTo: [ // if the location is only known relative to other things, here they can be specified
{
  what: 'ref',
  distance: 'lengthType',
  direction: 'angleType'
}
]  


Methods:
isIn(Location) - true if this location is in the given location
contains(Location) - true if this location is in the given location
contains(geoPosition) - true if the given position is in this location


