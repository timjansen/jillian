Object: super class for category, thing, relationship...

Type hierarchy:
Object

Each object can have:
	name: the primary name, unique
	
	type: object, category, thing, relationship...
	
	words: {
		english: {
			englishWord: precision (defines how precisely and uniquely the word identifies the thing. Used when a word has several meanings. 1 is the default)
		}
	}
	
	reality: one or more ref to reality instances

	properties: map of permanent properties. See property.txt.

	relationships: List of relationships, see relationship.txt
		
	actions: List of sentences relevant to the object 
		
	timeline: [ // properties, actions and components are all here. This is optional, as the values may be derived from the actions
			// temporary properties:
			{
				from: 'timeType', 
				to:  'timeType', 
				duration: 'durationType',    // optional. duration, if known and no good accuracy for from/to
				source: 'reference', // optional. for imported data (.e.g. @WikiData)
			  // example
				properties: {
					weight: 554 // default to kg
				}
			},
			// conditional properties and components
			{
				condition: 'expressionType', // e.g. if gender==male
				properties: {
					// properties that are only true if the expresion is true
				},
				components: {
					status: {limited: 'string', options: ['complete', 'incomplete', 'update']},
					list: 'componentType*'
				}
			},
			// a one-time sample and it's result
			{
				sample: 'timeType',
				validity: 'durationType',   // optional. how long is that sample supposed to be valid 
				source: 'reference', // optional. for imported data
				properties: {
				},
				shape: {
				}
		}
		
	]
