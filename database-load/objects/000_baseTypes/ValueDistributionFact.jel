/**
 * A Fact that offers a distribution of possible values
 */
 class ValueDistributionFact extends Fact

  /**
   * @param values The range of possible values.
   */
  constructor(values: Distribution, comprehensive, negative, owner, transcript, transscriptSentence, creator, type, trustLevel, startTime, endTime, precondition) =>
  {
    factTypeSpecificness: if negative then 0.2
                          if comprehensive then 0.8
                          else 0.3
  }

  override checkValue(v: any?, dependencies: any{} = {}): bool =>
    v in this.values.range

  override getValue(dependencies: any{} = {}): any? => this.values
  
  override getDiscreteValue(dependencies: any{} = {}): any? => if this.values.min == this.values.max then this.values.min else null
  
  override allows(thisDependencies: any{} = {}, other: Fact, otherDependencies: any{} = {}): bool => true
