/**
 * A Fact that offers a distribution of possible values
 */
 class ValueDistributionFact extends Fact

  /**
   * @param values The range of possible values.
   */
  constructor(values: Distribution, coverage, owner, transcript, transscriptSentence, creator, type, trustLevel, startTime, endTime, precondition) =>
  {
    factTypeSpecificness: if coverage == FactCoverageEnum.COMPLETE_NEGATIVES || coverage == FactCoverageEnum.SOME_NEGATIVES then 0.2 else 0.3
  }

  override matchesValue(v: any?, dependencies: any{} = {}): bool => v in this.values.range

  override getValue(dependencies: any{} = {}): any? => this.values
  
  override getDiscreteValue(dependencies: any{} = {}): any? => if this.values.min == this.values.max then this.values.min else null
  
  override allows(thisDependencies: any{} = {}, other: Fact, otherDependencies: any{} = {}): bool => true
