/**
 * A single, simple value that represents the actual value of the property.
 */
class ValueFact extends Fact

  /**
   * @param values The value that represents the fact's actual value.
   */
  constructor(value: any, coverage, owner, transcript, transscriptSentence, creator, type, trustLevel, startTime, endTime, precondition) =>
  {
    factTypeSpecificness: if coverage == FactCoverageEnum.COMPLETE || coverage == FactCoverageEnum.COMPLETE_NEGATIVES then 1 
                          if coverage == FactCoverageEnum.SOME_NEGATIVES then 0.1
                          else 0.5

  }

  override matchesValue(v: any?, dependencies: any{} = {}): bool => v == this.value

  override getValue(dependencies: any{} = {}): any? => this.value
  
  override getDiscreteValue(dependencies: any{} = {}): any? => this.value
    
  override allows(thisDependencies: any{} = {}, other: Fact, otherDependencies: any{} = {}): bool => true

  override getTypeValidationValue(): any? => this.value
